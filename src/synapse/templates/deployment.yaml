apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "synapse.fullname" . }}
  labels:
    {{- include "synapse.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "synapse.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "synapse.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "synapse.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: synapse-config
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - sh
            - -c
            - sleep
            - 10m
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /config
              name: config
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SYNAPSE_SERVER_NAME
              value: "{{ .Values.global.domain }}"
            - name: SYNAPSE_REPORT_STATS
              value: "{{ .Values.global.anonymousUsage }}"
            - name: SYNAPSE_HTTP_PORT
              value: "{{ .Values.service.port }}"
            - name: SYNAPSE_CONFIG_DIR
              value: "{{ .Values.global.configDirectory }}"
            - name: SYNAPSE_CONFIG_PATH
              value: "{{ .Values.global.configPath }}"
            - name: SYNAPSE_DATA_DIR
              value: "{{ .Values.global.dataDirectory }}"
            - name: UID
              value: "{{ .Values.global.uid }}"
            - name: GID
              value: {{ .Values.global.gid }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /config
              name: config
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
